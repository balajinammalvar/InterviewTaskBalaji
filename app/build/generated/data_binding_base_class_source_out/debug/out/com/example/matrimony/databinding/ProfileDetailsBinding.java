// Generated by data binding compiler. Do not edit!
package com.example.matrimony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.viewpager.widget.ViewPager;
import com.example.matrimony.R;
import com.example.matrimony.model.ProfileWithImages;
import com.google.android.material.tabs.TabLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ProfileDetailsBinding extends ViewDataBinding {
  @NonNull
  public final CardView cvProfileDetails;

  @NonNull
  public final Guideline glProfileDetailsVertical;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final TabLayout tbLayout;

  @NonNull
  public final TextView tvProfileDetails;

  @NonNull
  public final TextView tvProfileName;

  @NonNull
  public final ViewPager vpProfileDetails;

  @Bindable
  protected ProfileWithImages mProfileDetailsViewModel;

  protected ProfileDetailsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cvProfileDetails, Guideline glProfileDetailsVertical, ImageView ivBack,
      TabLayout tbLayout, TextView tvProfileDetails, TextView tvProfileName,
      ViewPager vpProfileDetails) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cvProfileDetails = cvProfileDetails;
    this.glProfileDetailsVertical = glProfileDetailsVertical;
    this.ivBack = ivBack;
    this.tbLayout = tbLayout;
    this.tvProfileDetails = tvProfileDetails;
    this.tvProfileName = tvProfileName;
    this.vpProfileDetails = vpProfileDetails;
  }

  public abstract void setProfileDetailsViewModel(
      @Nullable ProfileWithImages profileDetailsViewModel);

  @Nullable
  public ProfileWithImages getProfileDetailsViewModel() {
    return mProfileDetailsViewModel;
  }

  @NonNull
  public static ProfileDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.profile_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ProfileDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ProfileDetailsBinding>inflateInternal(inflater, R.layout.profile_details, root, attachToRoot, component);
  }

  @NonNull
  public static ProfileDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.profile_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ProfileDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ProfileDetailsBinding>inflateInternal(inflater, R.layout.profile_details, null, false, component);
  }

  public static ProfileDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ProfileDetailsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ProfileDetailsBinding)bind(component, view, R.layout.profile_details);
  }
}
